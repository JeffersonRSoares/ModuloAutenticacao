<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>